g  %>%
add_layout_(with_fr()) %>%
plot()
# Diamond
# A graph with 4 vertices and 5 edges, resembles to a schematic diamond if drawn properly.
g <- make_graph("Cubical") %>%
set_vertex_attr("name",value = LETTERS[1:4])
g  %>%
add_layout_(with_fr()) %>%
plot()
?data
library(igraphdata)
### data:Loads specified data sets, or list the available data sets.
data(package="igraphdata")
### data:Loads specified data sets, or list the available data sets.
data(package="igraphdata")
### data:Loads specified data sets, or list the available data sets.
print(data(package="igraphdata"))
try(data(package = "rpart") )
data(package="igraphdata")
library(igraphdata)
### data:Loads specified data sets, or list the available data sets.
data(package="igraphdata")
# Data sets in package ‘igraphdata’:
#
# Koenigsberg                 Bridges of Koenigsberg from Euler's times
# UKfaculty                   Friendship network of a UK university faculty
# USairports                  US airport network, 2010 December
# enron                       Enron Email Network
# foodwebs                    A collection of food webs
# immuno                      Immunoglobulin interaction network
# karate                      Zachary's karate club network
# kite                        Krackhardt's kite
# macaque                     Visuotactile brain areas and connections
# rfid                        Hospital encounter network data
# yeast                       Yeast protein interaction network
data("macaque")
macaque
g
gorder(macaque)
gorder(macaque)
###[1] 45
###|E|
gsize(macaque)
V(macaque)
# + 45/45 vertices, named, from f7130f3:
#  [1] V1     V2     V3     V3A    V4     V4t    VOT    VP     MT     MSTd/p MSTl
# [12] PO     LIP    PIP    VIP    DP     7a     FST    PITd   PITv   CITd   CITv
# [23] AITd   AITv   STPp   STPa   TF     TH     FEF    46     3a     3b     1
# [34] 2      5      Ri     SII    7b     4      6      SMA    Ig     Id     35
# [45] 36
E(macaque)
ends("V1|V2")
macaque %>% ends("V1|V2")
macaque %>% tail_of("V1|V2")
macaque %>% tail_of("V1|V4")
macaque %>% ends("V1|V4")
macaque %>% head_of("V1|V2")
macaque %>% neighbors("V1")
macaque %>% neighbors("V1",mode = "out")
plot(macaque)
macaque %>% neighbors("V1",mode = "in")
V(macaque)[.from("V1")]
V(macaque)[.from(V(macaque)=="V1")]
V(macaque)[from("V1")]
E(macaque)[from("V1")]
V(macaque)["V1","V2",.nei("V1"),.nei("V2")] %>%
induced_subgraph(graph = macaque) %>%
summary()
is_connected(macaque,mode = "weak")
is_connected(macaque,mode = "weak")
is_connected(macaque,mode = "strong")
is_connected(macaque,mode = "weak")
is_connected(macaque,mode = "strong")
V(macaque)[1:4]
# + 4/45 vertices, named, from f7130f3:
# [1] V1  V2  V3  V3A
v(macaque)[c("V1","V2","V3","V3A")]
# + 4/45 vertices, named, from f7130f3:
# [1] V1  V2  V3  V3A
V(macaque)[c("V1","V2","V3","V3A")]
V(macaque)[1:10] %>% as_ids()
E(macaque)[1:10] %>% as_ids()
data("kite")
V(kite)
# + 10/10 vertices, named, from 6b7ddad:
#  [1] A B C D E F G H I J
V(kite)[1:3,7:10]
# + 7/10 vertices, named, from 6b7ddad:
# [1] A B C G H I J
V(kite)[degree(kite) < 2]
# + 1/10 vertex, named, from 6b7ddad:
# [1] J
V(kite)[.nei("D")]
# + 6/10 vertices, named, from 6b7ddad:
# [1] A B C E F G
V(kite)[.innei("D")]
# + 6/10 vertices, named, from 6b7ddad:
# [1] A B C E F G
V(kite)[.outnei("D")]
is_directed(kite)
# + 6/10 vertices, named, from 6b7ddad:
# [1] A B C E F G
V(kite)[.inc("A|D")]
# + 2/10 vertices, named, from 6b7ddad:
# [1] A D
c(V(kite)["A"],V(kite)["D"])
# + 2/10 vertices, named, from 6b7ddad:
# [1] A D
rev(v(kite))
# + 2/10 vertices, named, from 6b7ddad:
# [1] A D
rev(V(kite))
# + 10/10 vertices, named, from 6b7ddad:
#  [1] J I H G F E D C B A
unique(V(kite))
V(kite)["A","A","C","C"]
# + 10/10 vertices, named, from 6b7ddad:
#  [1] J I H G F E D C B A
unique(V(kite)["A","A","C","C"])
intersection(V(kite)[1:7],V(kite)[5:10])
# + 3/10 vertices, named, from 6b7ddad:
# [1] E F G
difference(V(kite),V(kite)[1:5])
E(kite)
E(kite)
E(kite,path = c("A","D","C"))
E(kite)[ V(kite)[1:2] %--%  V(kite)[1:2] ]
E(kite)[ V(kite)[1:2] %--%  V(kite)[3:4] ]
E(kite)[1:3,7:10]
seq_len(gsize(kite)) %%2
# + 7/18 edges from 6b7ddad (vertex names):
# [1] A--B A--C A--D B--G C--D C--F D--E
### select  even edges
E(kite)[seq_len(gsize(kite)) %%2]
gsize(kite)) %%2 ==1
seq_len(gsize(kite)) %%2 ==1
seq_len(gsize(kite)) %%2 == 0
seq_len(seq_len(gsize(kite)) %%2 == 0)
seq_len(gsize(kite))[seq_len(gsize(kite)) %%2 == 0]
E(kite)[seq_len(gsize(kite))[seq_len(gsize(kite)) %%2 == 0]]
E(kite)[seq_len(gsize(kite)) %%2 == 0]
E(kite)[seq_len(gsize(kite)) %%2]
E(kite)[.inc("D")]
E(kite)[.from("D")]
E(kite)[.from("D")]
E(kite)[.to("D")]
E(kite)[from("D")]
E(macaque)[.from("V1")]
E(macaque)[.to("V1")]
E(macaque)[.from("V1")]
# + 8/463 edges from f7130f3 (vertex names):
# [1] V1->V2  V1->V3  V1->V3A V1->V4  V1->V4t V1->MT  V1->PO  V1->PIP
E(macaque)[.to("V1")]
g <- random.graph.game(100,0.02)
library(pheatmap)
library(ggplot2)
library(colorRamps)
library(RColorBrewer)
library(viridis)
library(cowplot)
library(igraph)
mat1 <- matrix(rgamma(1000, shape = 1) * 5, ncol = 50)
#### set gene and sample name
rownames(mat1) <- paste0("Gene",1:20)
colnames(mat1) <- paste0("Sample",1:50)
#### set group
group1 <- sample(x = colnames(mat1),size = ncol(mat1)/2,replace = F)
group2 <- setdiff(colnames(mat1),group1)
#### make group1 difference from group2
mat1[,group1] <- mat1[,group1]*20
#### make another data, set group2 larger
mat2 <- matrix(rgamma(1000, shape = 1) * 5, ncol = 50)
rownames(mat2) <- paste0("Gene",21:40)
colnames(mat2) <- paste0("Sample",1:50)
mat2[,group2] <- mat2[,group2]*20
mat <- rbind(mat1,mat2)
#### add colnames data
# Generate annotations for rows and columns
annotation_col = data.frame(
Group = factor(c(rep("group1",25),rep("group2",25))),
CellType = factor(c(rep("CT1",25),rep("CT2",25)))
)
rownames(annotation_col) = cbind(group1,group2)
annotation_col <- annotation_col[colnames(mat),]
annotation_row = data.frame(
GeneClass = factor(c(rep("Set1",20),rep("Set2",20)))
)
rownames(annotation_row) = paste("Gene", 1:40, sep = "")
### avoid to be overwright
expr.mat <- mat
rdbu <- colorRampPalette(rev(brewer.pal(n = 11, name ="RdBu")))
colorPal <- colorRampPalette(c("darkgreen", "yellow","red"))
tmp.col <- adjustcolor(colorPal(10), alpha.f=.8)
pheatmap(
mat   = log10(mat+1),
color = tmp.col,
scale = "row",
cluster_rows = T,
cluster_cols = T,
border_color = NA,
annotation_col = annotation_col,
annotation_row = annotation_row,
show_colnames = TRUE,
show_rownames = TRUE,
drop_levels   = TRUE,
fontsize  = 8,
main = "Pheatmap log normalized,Clustered,default color"
)
g <- random.graph.game(100,0.02)
plot.igraph(g,vertex.label="",vertex.color=tmp.col)
library(tsne)
?tsne
colors = rainbow(length(unique(iris$Species)))
names(colors) = unique(iris$Species)
ecb = function(x,y){ plot(x,t='n'); text(x,labels=iris$Species, col=colors[iris$Species]) }
tsne_iris = tsne(iris[,1:4], epoch_callback = ecb, perplexity=50)
detach("package:tsne", unload = TRUE)
library(Rtsne)
pheatmap(
mat   = log10(mat+1),
color = tmp.col,
scale = "row",
cluster_rows = T,
cluster_cols = T,
border_color = NA,
annotation_col = annotation_col,
annotation_row = annotation_row,
show_colnames = TRUE,
show_rownames = TRUE,
drop_levels   = TRUE,
fontsize  = 8,
main = "Pheatmap log normalized,Clustered,default color"
)
library(pbmc3k.SeuratData)
library(Seurat)
data("pbmc3k.final")
pbmc3k <- UpdateSeuratObject(pbmc3k.final)
TSNEPlot(pbmc3k)
View(pbmc3k)
UMAPPlot(pbmc3k)
length(levels(pbmc3k))
UMAPPlot(pbmc3k)+
scale_color_manual(values = adjustcolor(colorPal(9), alpha.f=.8))
DimPlot(pbmc3k,pt.size = 10)+
scale_color_manual(values = adjustcolor(colorPal(9), alpha.f=.8))
DimPlot(pbmc3k,pt.size = 5)+
scale_color_manual(values = adjustcolor(colorPal(9), alpha.f=.8))
?DimPlot
DimPlot(pbmc3k,pt.size = 0.5)+
scale_color_manual(values = adjustcolor(colorPal(9), alpha.f=.8))
DimPlot(pbmc3k,pt.size = 0.8)+
scale_color_manual(values = adjustcolor(colorPal(9), alpha.f=.8))
DimPlot(pbmc3k,pt.size = 0.9)+
scale_color_manual(values = adjustcolor(colorPal(9), alpha.f=.8))
DimPlot(pbmc3k,pt.size = 0.9,reduction = "pca")+
scale_color_manual(values = adjustcolor(colorPal(9), alpha.f=.8))
DimPlot(pbmc3k,pt.size = 1.2,reduction = "pca")+
scale_color_manual(values = adjustcolor(colorPal(9), alpha.f=.8))
DimPlot(pbmc3k,pt.size = 3,reduction = "pca")+
scale_color_manual(values = adjustcolor(colorPal(9), alpha.f=.8))
DimPlot(pbmc3k,pt.size = 3,reduction = "pca")+
scale_color_manual(values = adjustcolor(colorPal(9), alpha.f=1))
DimPlot(pbmc3k,pt.size = 3,reduction = "umap")+
scale_color_manual(values = adjustcolor(colorPal(9), alpha.f=1))
DimPlot(pbmc3k,pt.size = 3,reduction = "umap")+
scale_fill_manual(values = adjustcolor(colorPal(9), alpha.f=1))
DimPlot(pbmc3k,pt.size = 3,reduction = "umap")+
scale_color_manual(values = adjustcolor(colorPal(9), alpha.f=1))
?viridis_pal
n = 200
image(
1:n, 1, as.matrix(1:n),
col = colorPal(n),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
n = 200
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.8),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
n = 200
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.3),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
n = 200
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.5),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","white", "yellow","coral","red"))
n = 200
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.5),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
n = 200
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","yellow","coral","red"))
n = 200
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","green","yellow","coral","red"))
n = 200
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","oragne","yellow","coral","red"))
colorPal <- colorRampPalette(c("darkgreen","orangne","yellow","coral","red"))
colorPal <- colorRampPalette(c("darkgreen","orange","yellow","coral","red"))
n = 200
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
viridis(1)
colorPal <- colorRampPalette(c("darkgreen",""#440154FF"","yellow","coral","red"))
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","#440154FF"","yellow","coral","red"))
n = 200
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","#440154FF","yellow","coral","red"))
n = 200
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","yellow","red"))
n = 200
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","yellow","coral"))
n = 200
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
n = 20
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
n = 10
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","#0FD64F","yellow","coral"))
n = 10
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","#0FD64F","yellow","coral","red"))
n = 10
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","#F8EF42","yellow","coral","red"))
n = 10
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
n = 20
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","#F8EF42","yellow","coral","red"))
n = 20
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
n = 10
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","#0FD64F","#F8EF42","yellow","coral","red"))
n = 10
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","#0FD64F","#F8EF42","yellow","coral","red"))
n = 20
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
n = 100
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","#0FD64F","#F8EF42","white","coral","red"))
n = 100
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
colorPal <- colorRampPalette(c("darkgreen","#0FD64F","#F8EF42","yellow","orange","coral","red"))
n = 100
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
n = 10
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
n = 20
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
jet.colors <-
colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(jet.colors(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
n = 265
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(jet.colors(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(rdbu(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(jet.colors(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(jet.colors(n), alpha.f=.3),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(jet.colors(n), alpha.f=.5),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(rdbu(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
image(
1:n, 1, as.matrix(1:n),
col = adjustcolor(colorPal(n), alpha.f=.7),
xlab = "colorPal n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
