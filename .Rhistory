setwd("D:/project/landau1994.github.io/R")
setwd("D:/project/landau1994.github.io")
blogdown::new_post()
blogdown::new_post()
blogdown::new_post(title = "Rmarkdown_test")
blogdown:::insert_image_addin()
knit_with_parameters('D:/project/landau1994.github.io/source/_posts/2020-04-09-rmarkdown-test.Rmd')
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::update_meta_addin()
knit_with_parameters('D:/project/landau1994.github.io/source/_posts/2020-04-09-rmarkdown-test.Rmd')
knit_with_parameters('D:/project/landau1994.github.io/source/_posts/2020-04-09-rmarkdown-test.Rmd')
blogdown:::update_meta_addin()
setwd("D:/project/landau1994.github.io/scaffolds")
setwd("D:/project/Programming/R")
devtools::create("basictemplate")
setwd("D:/project/landau1994.github.io")
devtools::create("basictemplate")
setwd("D:/project/Programming/R")
devtools::create("basictemplate")
devtools::install("basictemplate")
library(basictemplate)
library(basictemplate)
detach("package:basictemplate", unload = TRUE)
library(basictemplate)
library(basictemplate)
devtools::install("basictemplate")
library(basictemplate)
detach("package:basictemplate", unload = TRUE)
library(basictemplate)
library(basictemplate)
setwd("D:/project/landau1994.github.io")
setwd("D:/project/landau1994.github.io")
origCache <- knitr::opts_chunk$get("cache.path")
base <- sub("_cache/.*$", "", origCache)
cat("The base of the filename is ", base)
pwd
pwd()
getpwd()
paste0("source/", "img")
knit("source/_posts/rmarkdown-test.Rmd")
knitr::knit("source/_posts/rmarkdown-test.Rmd")
knitr::knit("source/_posts/rmarkdown-test.Rmd")
normalizePath('source')
# input/output filenames are passed as two additional arguments to Rscript
a = commandArgs(TRUE)
d = gsub('^source/_?|[.][a-zA-Z]+$', '', a[1])
blogdown:::get_config2('root', '/')
sprintf('figure/%s/', "post")
blogdown::new_post(title = "rmarkdown_test")
devtools::install_github('rstudio/rmarkdown')
remotes::install_github('rstudio/rmarkdown')
remotes::install_github('rstudio/rmarkdown')
devtools::install_github('rstudio/rmarkdown')
source("http://jtilly.io/install_github/install_github.R")
install_github('rstudio/rmarkdown')
remotes::install_github('rstudio/rmarkdown')
devtools::install_local(path = "../../software_package/rmarkdown-master.zip")
devtools::install_local(path = "../../software_package/rmarkdown-master.zip")
devtools::install_local(path = "../../software_package/rmarkdown-master.zip")
remove.packages("glue")
devtools::install_local(path = "../../software_package/rmarkdown-master.zip")
iinstall.packages("digest")
install.packages("digest")
remove.packages("glue")
devtools::install_local(path = "../../software_package/rmarkdown-master.zip")
iinstall.packages("glue")
install.packages("glue")
devtools::install_local(path = "../../software_package/rmarkdown-master.zip")
message("Dep path = ", blogdown::dep_path())
message("fig.path = ", knitr::opts_chunk$get("fig.path"))
message("Dep path = ", blogdown::dep_path())
message("fig.path = ", knitr::opts_chunk$get("fig.path"))
knitr::opts_chunk$set(collapse = TRUE)
message("Dep path = ", blogdown::dep_path())
message("fig.path = ", knitr::opts_chunk$get("fig.path"))
message("Dep path = ", blogdown::dep_path())
message("Dep path = ", blogdown::dep_path())
message("fig.path = ", knitr::opts_chunk$get("fig.path"))
knitr::opts_chunk$get("fig.path")
remotes::install_github('yihui/knitr', upgrade = TRUE)
remotes::install_github('yihui/knitr', upgrade = TRUE)
remotes::install_github('yihui/knitr', upgrade = TRUE)
message("Dep path = ", blogdown::dep_path())
knitr::opts_chunk$set(collapse = TRUE,
fig.path = sprintf('figure/%s/', "post"),
cache.path = sprintf('cache/%s/', "post"))
message("Dep path = ", blogdown::dep_path())
message("fig.path = ", knitr::opts_chunk$get("fig.path"))
library(grid)
library(gridExtra)
library(pheatmap)
library(ggplot2)
library(colormap)
items=names(colormaps)
plot_list=list()
for (a in items[1:8]){
x= pheatmap(volcano,
cluster_rows = F,
cluster_cols = F,
main = a,
height = 3,
width = 3,border_color = NA,
color = colormap_pal(colormap = colormaps[[a]])(100),silent = T)
plot_list[[a]] = x[[4]]     ##to save each plot into a list. note the [[4]]
}
cowplot::plot_grid(plotlist = plot_list[1:8],ncol = 2,nrow = 4)
